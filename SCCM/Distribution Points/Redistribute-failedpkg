$SITECODE = (Get-WmiObject -Namespace "root\SMS" -Class "SMS_ProviderLocation").Sitecode
$SMSINSTALLLOCATION = "F:\Microsoft Configuration Manager\"
$ADMINCONSOLELOCATION = "F:\Microsoft Configuration Manager\AdminConsole\"
 
#Connecting to Site
cd ($ADMINCONSOLELOCATION + "bin")
import-module .\ConfigurationManager.psd1
cd ($SITECODE + ":")
 
$errorPKG = Get-WmiObject -Namespace "Root\SMS\Site_$($SITECODE)" -Query "select * from SMS_PackageStatusDistPointsSummarizer where state = 2 OR state = 3" | select PackageID, @{Label = "DistributionPoint"; Expression = { $_.servernalpath.trimstart('["Display=\\').split("\")[3] } }, State 
$DPs = $errorPKG | select DistributionPoint -Unique
 
foreach ($DistributionPoint in $DPs) {
 
    $DistPoint = $DistributionPoint.DistributionPoint
	
    $Query = "Select NALPath,Name From SMS_DistributionPointInfo Where ServerName Like '%$DistPoint%'"
    $DistributionPoint = @(Get-WmiObject -Namespace "root\SMS\Site_$SITECODE" -Query $Query)
    $ServerNalPath = $DistributionPoint.NALPath -replace "([\[])", '[$1]' -replace "(\\)", '\$1'
 
    if ($DistributionPoint.Count -ne 1) {
        Foreach ($DistributionPoint in $DistributionPoint) {
            Write-Host $DistributionPoint.Name
        }
        Write-Host "Found $($DistributionPoint.Count) matching Distribution Points. Please redefine query."
    }
    else {
        $Query = "Select PackageID From SMS_PackageStatusDistPointsSummarizer Where ServerNALPath Like '$ServerNALPath' AND (State = 2 OR state = 3)"
        $FailedPackages = Get-WmiObject -Namespace "root\SMS\Site_$SITECODE" -Query $Query
        Foreach ($Package in $FailedPackages) {
            $Query = "Select * From SMS_DistributionPoint WHERE SiteCode='$SITECODE' AND ServerNALPath Like '$ServerNALPath' AND PackageID = '$($Package.PackageID)'"
            $DistPointPkg = Get-WmiObject -Namespace "root\SMS\Site_$SITECODE" -Query $Query
            Write-Host "Refreshing package $($DistPointPkg.PackageID) on $($DistributionPoint.Name)"
            $DistPointPkg.RefreshNow = $true
            [Void]$DistPointPkg.Put()
        }
    }
}
